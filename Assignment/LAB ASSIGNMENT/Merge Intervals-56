void swap(int *a,int *b)
{
    int temp=0;
    temp=*a;
    *a=*b;
    *b=temp;
}
int** merge(int** intervals, int intervalsSize, int* intervalsColSize, int* returnSize, int** returnColumnSizes){
    *returnSize=0;
    if(intervalsSize==0){
        return NULL;
    }
     for(int i=0;i<intervalsSize-1;i++)
   {
       for(int j=0;j<intervalsSize-i-1;j++)
       {
           if(intervals[j]>intervals[j+1])
           {
               swap(&intervals[j],&intervals[j+1]);
           }
       }
   }
    int** ret=(int**)malloc(intervalsSize*sizeof(int*));
    int* tmp=NULL;
    int flag=0;
    for(int i=0;i<intervalsSize;i++){
        if(flag==0){
            tmp=intervals[i];
            flag=1;
            continue;
        }
        if(tmp[0]<=intervals[i][0]&&tmp[1]>=intervals[i][0]){
            tmp[1]=tmp[1]>intervals[i][1]?tmp[1]:intervals[i][1];
        }else{
            ret[(*returnSize)++]=tmp;
            flag=0;
            i--;
        }
    }
    ret[(*returnSize)++]=tmp;
    returnColumnSizes[0]=(int*)malloc((*returnSize)*sizeof(int));
    for(int i=0;i<(*returnSize);i++){
        returnColumnSizes[0][i]=2;
    }
    return ret;
}
